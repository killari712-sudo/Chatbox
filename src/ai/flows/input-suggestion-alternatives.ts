// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides suggestions or alternatives for user input using generative AI.
 *
 * - inputSuggestionAlternatives - A function that handles the input suggestion process.
 * - InputSuggestionAlternativesInput - The input type for the inputSuggestionAlternatives function.
 * - InputSuggestionAlternativesOutput - The return type for the inputSuggestionAlternatives function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InputSuggestionAlternativesInputSchema = z.object({
  text: z
    .string()
    .describe('The text for which to generate suggestions or alternatives.'),
});
export type InputSuggestionAlternativesInput = z.infer<
  typeof InputSuggestionAlternativesInputSchema
>;

const InputSuggestionAlternativesOutputSchema = z.object({
  suggestions: z
    .array(z.string())
    .describe('An array of suggested alternative phrases or words.'),
});
export type InputSuggestionAlternativesOutput = z.infer<
  typeof InputSuggestionAlternativesOutputSchema
>;

export async function inputSuggestionAlternatives(
  input: InputSuggestionAlternativesInput
): Promise<InputSuggestionAlternativesOutput> {
  return inputSuggestionAlternativesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'inputSuggestionAlternativesPrompt',
  input: {schema: InputSuggestionAlternativesInputSchema},
  output: {schema: InputSuggestionAlternativesOutputSchema},
  prompt: `Provide a list of alternative suggestions for the following text: {{{text}}}. Return the response as a JSON array of strings.`, 
});

const inputSuggestionAlternativesFlow = ai.defineFlow(
  {
    name: 'inputSuggestionAlternativesFlow',
    inputSchema: InputSuggestionAlternativesInputSchema,
    outputSchema: InputSuggestionAlternativesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
